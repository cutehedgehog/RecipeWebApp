@page
@model RecipeApp.Pages.CreateRecipeModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "CreateRecipe";

}

<style>
body {
    font-family: Arial, sans-serif;
    background-color: #f8f9fa;
    margin: 0;
    padding: 0;
}

.form-container {
    width: 100%;
    max-width: 600px;
    margin: 100px auto;
    padding: 20px;
    background: #ffffff;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    box-sizing: border-box; 
}

.text-center {
    text-align: center;
    margin-bottom: 20px;
    font-size: 1.5rem;
    font-weight: bold;
    color: #343a40;
}

.form-label {
    font-size: 1rem;
    font-weight: bold;
    color: #495057;
    margin-bottom: 5px;
}

.form-control {
    font-size: 1rem;
    padding: 10px 15px;
    border-radius: 4px;
    border: 1px solid #ced4da;
    width: calc(100% - 30px); 
    margin-bottom: 15px;
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.form-control:focus {
    border-color: #80bdff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.btn {
    display: inline-block;
    font-size: 1rem;
    padding: 10px 15px;
    color: #fff;
    background-color: #007bff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    width: 100%; 
}

.btn:hover {
    background-color: #0056b3;
}

.remove-btn {
    color: #dc3545;
    border: none;
    background: none;
    cursor: pointer;
}

.remove-btn:hover {
    text-decoration: underline;
}

.list-group {
    padding: 0;
    margin-bottom: 15px;
    list-style: none;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.list-group-item {
    padding: 10px 15px;
    background-color: #f8f9fa;
    border-bottom: 1px solid #ddd;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.list-group-item:last-child {
    border-bottom: none;
}

.list-group-item:hover {
    background-color: #e9ecef;
}

main.container {
    background-color: transparent;
    box-shadow: none;
    border-radius: 0; 
    padding: 0;
    max-width: none;
}

input[type="text"], textarea, datalist {
    font-family: Arial, sans-serif;
    font-size: 1rem;
    color: #333;
}

</style>

<div class="form-container">
    <h2 class="text-center">Add Recipe</h2>

    <form method="post" asp-page-handler="Create">
        <div class="mb-3">
            <label for="title" class="form-label">Recipe Title</label>
            <input value="@Model.Title" type="text" id="title" name="Title" class="form-control" placeholder="Enter recipe title" required />
        </div>
        <div class="mb-3">
            <label for="areaCategory" class="form-label">Area Category</label>
            <input value="@Model.AreaCategory" type="text" id="areaCategory" name="AreaCategory" class="form-control" placeholder="Enter area category" required />
        </div>
        <div class="mb-3">
            <label for="instructions" class="form-label">Instructions</label>
            <textarea id="instructions" name="Instructions" class="form-control" rows="5" placeholder="Enter instructions" required>@Model.Instructions</textarea>
        </div>

        <div class="mb-3">
            <label for="inputItem" class="form-label">Add Ingredients</label>
            <input type="text" id="inputItem" list="foodlist" class="form-control" placeholder="Type ingredient name" />
            <datalist id="foodlist">
                @foreach (var item in Model.AutoCompleteItems)
                {
                    <option value="@item.Name"></option>
                }
            </datalist>
        </div>

        <ul id="selectedItems" class="list-group mb-3">
            @foreach (var sItem in Model.SelectedItems)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @sItem
                    <button type="button" class="remove-btn btn-sm" data-item="@sItem">Delete</button>
                </li>
            }
        </ul>

        <button type="submit" class="btn btn-primary w-100">Submit Recipe</button>
    </form>
</div>

<script>
    const textbox = document.getElementById("inputItem");
    const datalist = document.getElementById('foodlist');

    textbox.addEventListener('keyup', function (e) {
        if (!isKeyboardEvent(e)) {
            var inputText = e.target.value.toLowerCase();
            fetch(`?handler=UpdateSelected&sItem=${inputText}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => {
                    if (response.ok) {
                        const titleContent = document.getElementById("title").value;
                        const areaCategoryContent = document.getElementById("areaCategory").value;
                        const instructionsContent = document.getElementById("instructions").value;

                        return fetch(`?handler=SaveForm&title=${encodeURIComponent(titleContent)}&category=${encodeURIComponent(areaCategoryContent)}&instructions=${encodeURIComponent(instructionsContent)}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" }
                        })
                        .then(() => {
                            location.reload();
                        });
                    }
                });
            textbox.value = "";
        }
    });

    function isKeyboardEvent(e) {
        return (e instanceof KeyboardEvent);
    }

    document.querySelectorAll(".remove-btn").forEach(button => {
        button.addEventListener("click", function (e) {
            const itemToRemove = e.target.getAttribute("data-item");
            fetch(`?handler=RemoveFromSelected&sItem=${encodeURIComponent(itemToRemove)}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => {
                    if (response.ok) {
                        const titleContent = document.getElementById("title").value;
                        const areaCategoryContent = document.getElementById("areaCategory").value;
                        const instructionsContent = document.getElementById("instructions").value;

                        return fetch(`?handler=SaveForm&title=${encodeURIComponent(titleContent)}&category=${encodeURIComponent(areaCategoryContent)}&instructions=${encodeURIComponent(instructionsContent)}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" }
                        })
                        .then(() => {
                            location.reload();
                        });
                    }
                });
        });
    });
</script>
