@page
@model RecipeApp.Pages.IndexModel
@{
    ViewData["Title"] = "Home";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<input type="text" list="foodlist" autocomplete=true id="inputItem" />

<ul id="selectedItems">
    @foreach (var sItem in Model.StockSelectedItems)
    {
        <li>@sItem</li>
        <button class="remove-btn" data-item="@sItem">Delete</button>
    }
</ul>
<datalist id="foodlist">
    @foreach (var item in Model.AutoCompleteItems)
    {
        <option value="@item.Name" />
    }
</datalist>
<button id="getRecipesBtn">Get Recipes</button>
<div id="recipesContainer" style="height: 300px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px; margin-top: 10px;">
</div>

@section Scripts {
    <script type="text/javascript">
        const textbox = document.getElementById("inputItem");
        const datalist = document.getElementById('foodlist');

        textbox.addEventListener('keyup', function (e) { 

            if (!isKeyboardEvent(e)) {
                var inputText = e.target.value.toLowerCase();
                fetch(`?handler=UpdateSelected&sItem=${inputText}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    }
                });
                textbox.textContent = "";
            }
        });

        function isKeyboardEvent(e) {
            return (e instanceof KeyboardEvent);
        }

        document.querySelectorAll(".remove-btn").forEach(button => {
            button.addEventListener("click", function (e) {
                const itemToRemove = e.target.getAttribute("data-item");
                fetch(`?handler=RemoveSelectedFromStock&sItem=${encodeURIComponent(itemToRemove)}`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" }
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    }
                });
            });
        });

        document.getElementById("getRecipesBtn").addEventListener("click", function () {
            fetch("?handler=GetRecipes", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ ingredients: @Html.Raw(Json.Serialize(Model.StockSelectedItems)) })
            })
                .then(response => response.json())
                .then(data => {
                    const recipesContainer = document.getElementById("recipesContainer");
                    recipesContainer.innerHTML = "";
                    data.forEach(recipe => {
                        const recipeDiv = document.createElement("div");
                        recipeDiv.className = "recipe-item";
                        recipeDiv.textContent = recipe.title;
                        recipeDiv.addEventListener("click", function () {
                            window.location.href = `/RecipeDetails?recipeId=${recipe.id}`;
                        });
                        recipesContainer.appendChild(recipeDiv);
                    });
                });
        });
    </script>
}
